package task;

import connector.ImageSourceConnector;
import org.apache.kafka.connect.source.SourceRecord;
import org.apache.kafka.connect.source.SourceTask;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.List;
import java.util.Map;

import static config.ImageSourceConfig.FOLDER_NAME;
import static config.ImageSourceConfig.TOPIC_NAME;

/*
 * This Java source file was auto generated by running 'gradle buildInit --type java-library'
 * by 'jack' at '8/01/18 3:30 PM' with Gradle 2.10
 *
 * @author jack, @date 8/01/18 3:30 PM
 */
public class ImageSourceTask extends SourceTask {
    public static final Logger LOG = LoggerFactory.getLogger(ImageSourceTask.class);

    private String topic;
    private String folderName;

    @Override
    public String version() {
        return new ImageSourceConnector().version();
    }

    @Override
    public void start(Map<String, String> props) {
        LOG.info("Image source task starting.");

        topic = props.get(TOPIC_NAME);
        folderName = props.get(FOLDER_NAME);
    }

    @Override
    public List<SourceRecord> poll() throws InterruptedException {
        return null;
    }

    @Override
    public void stop() {
        LOG.info("Image source task stopping.");
    }
}
